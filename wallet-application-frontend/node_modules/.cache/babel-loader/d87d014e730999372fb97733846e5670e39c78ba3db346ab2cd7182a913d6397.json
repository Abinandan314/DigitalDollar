{"ast":null,"code":"var _jsxFileName = \"D:\\\\Wallet Application\\\\wallet-application-frontend\\\\src\\\\components\\\\Transactions\\\\Transaction.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { Table } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:8080/transactions/\";\nfunction Transaction() {\n  _s();\n  const tokenItem = sessionStorage.getItem(\"token\");\n  var token;\n  if (tokenItem != null) {\n    token = tokenItem.substring(1, tokenItem.length - 1);\n  }\n  const [transactions, setTransactions] = useState([]);\n  const {\n    user: currentUser\n  } = useSelector(state => state.auth);\n  const username = currentUser.username;\n  useEffect(() => {\n    axios.get(API_URL + `${username}`, {\n      headers: {\n        \"Authorization\": `Bearer ${token}`\n      }\n    }).then(response => {\n      setTransactions(response.data);\n    }).catch(error => {});\n  }, [username, token]);\n  const getSenderName = transaction => {\n    if (transaction.senderUsername === username) {\n      return 'You'; // use 'You' for transactions sent by Abinandan\n    } else {\n      return transaction.senderUsername; // use sender's username for other transactions\n    }\n  };\n\n  const getReceiverName = transaction => {\n    if (transaction.receiverUsername === username) {\n      return 'You'; // use 'You' for transactions sent by Abinandan\n    } else {\n      return transaction.receiverUsername; // use sender's username for other transactions\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center my-5\",\n      children: \"Transaction History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sender\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Receiver\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Transfer Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Transaction Date and Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(\"tr\", {\n          style: {\n            backgroundColor: transaction.senderUsername === username ? '#FADBD8' : '#D5F5E3'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: getSenderName(transaction)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: getReceiverName(transaction)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              color: transaction.senderUsername === username ? 'red' : 'black'\n            },\n            children: [\"$ \", transaction.transferAmount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(transaction.createdAt).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)]\n        }, transaction.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(Transaction, \"KQA5n+Ppx8bfYjoj3ITmUztALSE=\", false, function () {\n  return [useSelector];\n});\n_c = Transaction;\nexport default Transaction;\nvar _c;\n$RefreshReg$(_c, \"Transaction\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","axios","Table","jsxDEV","_jsxDEV","API_URL","Transaction","_s","tokenItem","sessionStorage","getItem","token","substring","length","transactions","setTransactions","user","currentUser","state","auth","username","get","headers","then","response","data","catch","error","getSenderName","transaction","senderUsername","getReceiverName","receiverUsername","children","className","fileName","_jsxFileName","lineNumber","columnNumber","striped","bordered","hover","map","style","backgroundColor","color","transferAmount","Date","createdAt","toLocaleString","id","_c","$RefreshReg$"],"sources":["D:/Wallet Application/wallet-application-frontend/src/components/Transactions/Transaction.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { Table } from 'react-bootstrap';\r\nconst API_URL = \"http://localhost:8080/transactions/\";\r\nfunction Transaction() {\r\n  const tokenItem = sessionStorage.getItem(\"token\");\r\n  var token;\r\n  if(tokenItem != null){\r\n     token = tokenItem.substring(1,tokenItem.length-1);\r\n  }\r\n  const [transactions, setTransactions] = useState([]);\r\n  const { user: currentUser } = useSelector((state) => state.auth);\r\n  const username = currentUser.username;\r\n  useEffect(() => {\r\n    axios.get(API_URL + `${username}`,{\r\n      headers:{\r\n        \"Authorization\" : `Bearer ${token}`\r\n    }\r\n    })\r\n      .then(response => {\r\n        setTransactions(response.data);\r\n      })\r\n      .catch(error => {\r\n      });\r\n  }, [username,token]);\r\n\r\n  \r\nconst getSenderName = (transaction) => {\r\n    if (transaction.senderUsername === username) {\r\n      return 'You'; // use 'You' for transactions sent by Abinandan\r\n    } else {\r\n      return transaction.senderUsername; // use sender's username for other transactions\r\n    }\r\n  };\r\n  const getReceiverName = (transaction) => {\r\n    if (transaction.receiverUsername === username) {\r\n      return 'You'; // use 'You' for transactions sent by Abinandan\r\n    } else {\r\n      return transaction.receiverUsername; // use sender's username for other transactions\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"text-center my-5\">Transaction History</h2>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>Sender</th>\r\n            <th>Receiver</th>\r\n            <th>Transfer Amount</th>\r\n            <th>Transaction Date and Time</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {transactions.map(transaction => (\r\n            <tr key={transaction.id} style={{backgroundColor:transaction.senderUsername === username ? '#FADBD8' : '#D5F5E3'}}>\r\n              <td>{getSenderName(transaction)}</td>\r\n              <td>{getReceiverName(transaction)}</td>\r\n              <td style={{ color: transaction.senderUsername === username ? 'red' : 'black' }}>\r\n                $ {transaction.transferAmount}\r\n                </td>\r\n              <td>{new Date(transaction.createdAt).toLocaleString()}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Transaction;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}