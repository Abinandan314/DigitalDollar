{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { setMessage } from \"./message\";\nimport WalletService from \"../services/wallet.service\";\nexport const transfer = createAsyncThunk(\"wallet/transfer\", async (_ref, thunkAPI) => {\n  let {\n    senderUsername,\n    username,\n    transferAmount\n  } = _ref;\n  try {\n    const response = await WalletService.transfer(senderUsername, username, transferAmount);\n    console.log(username);\n    return response.data;\n  } catch (error) {\n    const message = error.response.data.toString();\n    thunkAPI.dispatch(setMessage(message));\n    return thunkAPI.rejectWithValue();\n  }\n});","map":{"version":3,"names":["createAsyncThunk","setMessage","WalletService","transfer","_ref","thunkAPI","senderUsername","username","transferAmount","response","console","log","data","error","message","toString","dispatch","rejectWithValue"],"sources":["D:/Wallet Application/wallet-application/src/slices/walletslice.js"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { setMessage } from \"./message\";\r\nimport WalletService from \"../services/wallet.service\";\r\n\r\nexport const transfer = createAsyncThunk(\r\n    \"wallet/transfer\",\r\n    async ({ senderUsername, username, transferAmount }, thunkAPI) => {\r\n        try {\r\n          const response = await WalletService.transfer(senderUsername, username, transferAmount);\r\n          console.log(username);\r\n          return response.data;\r\n        } catch (error) {\r\n          const message = error.response.data.toString();\r\n          thunkAPI.dispatch(setMessage(message));\r\n          return thunkAPI.rejectWithValue();\r\n        }\r\n      }\r\n);"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,SAASC,UAAU,QAAQ,WAAW;AACtC,OAAOC,aAAa,MAAM,4BAA4B;AAEtD,OAAO,MAAMC,QAAQ,GAAGH,gBAAgB,CACpC,iBAAiB,EACjB,OAAAI,IAAA,EAAqDC,QAAQ,KAAK;EAAA,IAA3D;IAAEC,cAAc;IAAEC,QAAQ;IAAEC;EAAe,CAAC,GAAAJ,IAAA;EAC/C,IAAI;IACF,MAAMK,QAAQ,GAAG,MAAMP,aAAa,CAACC,QAAQ,CAACG,cAAc,EAAEC,QAAQ,EAAEC,cAAc,CAAC;IACvFE,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;IACrB,OAAOE,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMC,OAAO,GAAGD,KAAK,CAACJ,QAAQ,CAACG,IAAI,CAACG,QAAQ,EAAE;IAC9CV,QAAQ,CAACW,QAAQ,CAACf,UAAU,CAACa,OAAO,CAAC,CAAC;IACtC,OAAOT,QAAQ,CAACY,eAAe,EAAE;EACnC;AACF,CAAC,CACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}