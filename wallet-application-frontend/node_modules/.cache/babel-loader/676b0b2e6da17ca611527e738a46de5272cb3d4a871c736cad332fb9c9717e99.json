{"ast":null,"code":"var _jsxFileName = \"D:\\\\Wallet Application\\\\wallet-application\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { register } from \"../slices/auth.slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [successful, setSuccessful] = useState(false);\n  const dispatch = useDispatch();\n  const initialValues = {\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  };\n  const handleRegister = formValue => {\n    console.log(\"Hello Coming In\");\n    const {\n      username,\n      email,\n      password\n    } = formValue;\n    setSuccessful(false);\n    dispatch(register({\n      username,\n      email,\n      password\n    })).unwrap().then(() => {\n      setSuccessful(true);\n    }).catch(() => {\n      setSuccessful(false);\n    });\n  };\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().test(\"len\", \"The username must be between 3 and 20 characters.\", val => val && val.toString().length >= 3 && val.toString().length <= 20).required(\"This field is required!\"),\n    email: Yup.string().email(\"This is not a valid email.\").required(\"This field is required!\"),\n    password: Yup.string().test(\"len\", \"The password must be between 6 and 40 characters.\", val => val && val.toString().length >= 6 && val.toString().length <= 40).required(\"This field is required!\")\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-md-12 signup-form\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card card-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\",\n        alt: \"profile-img\",\n        className: \"profile-img-card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        validationSchema: validationSchema,\n        onSubmit: handleRegister,\n        children: _ref => {\n          let {\n            errors,\n            touched\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(Form, {\n            children: !successful && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"username\",\n                  children: \"Username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  name: \"username\",\n                  type: \"text\",\n                  className: \"form-control\" + (errors.username && touched.username ? \" is-invalid\" : \"\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"username\",\n                  component: \"div\",\n                  className: \"invalid-feedback\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"email\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  name: \"email\",\n                  type: \"email\",\n                  className: \"form-control\" + (errors.email && touched.email ? \" is-invalid\" : \"\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"email\",\n                  component: \"div\",\n                  className: \"invalid-feedback\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"password\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  name: \"password\",\n                  type: \"password\",\n                  className: \"form-control\" + (errors.password && touched.password ? \" is-invalid\" : \"\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"password\",\n                  component: \"div\",\n                  className: \"invalid-feedback\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-primary btn-block\",\n                  children: \"Sign Up\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"DM7KNfq750I8FME2Dga3K/4+Uxo=\", false, function () {\n  return [useDispatch];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useDispatch","Formik","Field","Form","ErrorMessage","Yup","register","jsxDEV","_jsxDEV","Register","_s","successful","setSuccessful","dispatch","initialValues","username","email","password","handleRegister","formValue","console","log","unwrap","then","catch","validationSchema","object","shape","string","test","val","toString","length","required","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_ref","errors","touched","htmlFor","name","type","component","_c","$RefreshReg$"],"sources":["D:/Wallet Application/wallet-application/src/components/Register.js"],"sourcesContent":["import React, { useState} from \"react\";\r\nimport { useDispatch} from \"react-redux\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport { register } from \"../slices/auth.slice\";\r\n\r\nconst Register = () => {\r\n  const [successful, setSuccessful] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const initialValues = {\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  \r\n\r\n  const handleRegister = (formValue) => {\r\n    console.log(\"Hello Coming In\");\r\n    const { username, email, password } = formValue;\r\n\r\n    setSuccessful(false);\r\n\r\n    dispatch(register({ username, email, password }))\r\n      .unwrap()\r\n      .then(() => {\r\n        setSuccessful(true);\r\n      })\r\n      .catch(() => {\r\n        setSuccessful(false);\r\n      });\r\n  };\r\n  const validationSchema = Yup.object().shape({\r\n    username: Yup.string()\r\n      .test(\r\n        \"len\",\r\n        \"The username must be between 3 and 20 characters.\",\r\n        (val) =>\r\n          val && val.toString().length >= 3 && val.toString().length <= 20\r\n      )\r\n      .required(\"This field is required!\"),\r\n    email: Yup.string()\r\n      .email(\"This is not a valid email.\")\r\n      .required(\"This field is required!\"),\r\n    password: Yup.string()\r\n      .test(\r\n        \"len\",\r\n        \"The password must be between 6 and 40 characters.\",\r\n        (val) =>\r\n          val && val.toString().length >= 6 && val.toString().length <= 40\r\n      )\r\n      .required(\"This field is required!\"),\r\n  });\r\n\r\n  return (\r\n    <div className=\"col-md-12 signup-form\">\r\n      <div className=\"card card-container\">\r\n        <img\r\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n          alt=\"profile-img\"\r\n          className=\"profile-img-card\"\r\n        />\r\n         <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={validationSchema}\r\n          onSubmit={handleRegister}\r\n          \r\n        >\r\n          {({ errors, touched }) => (\r\n            \r\n            <Form>\r\n              {!successful && (\r\n                <div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"username\">Username</label>\r\n                    <Field\r\n                      name=\"username\"\r\n                      type=\"text\"\r\n                      className={\r\n                        \"form-control\" +\r\n                        (errors.username && touched.username\r\n                          ? \" is-invalid\"\r\n                          : \"\")\r\n                      }\r\n                    />\r\n                    <ErrorMessage\r\n                      name=\"username\"\r\n                      component=\"div\"\r\n                      className=\"invalid-feedback\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <Field\r\n                      name=\"email\"\r\n                      type=\"email\"\r\n                      className={\r\n                        \"form-control\" +\r\n                        (errors.email && touched.email ? \" is-invalid\" : \"\")\r\n                      }\r\n                    />\r\n                    <ErrorMessage\r\n                      name=\"email\"\r\n                      component=\"div\"\r\n                      className=\"invalid-feedback\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <Field\r\n                      name=\"password\"\r\n                      type=\"password\"\r\n                      className={\r\n                        \"form-control\" +\r\n                        (errors.password && touched.password\r\n                          ? \" is-invalid\"\r\n                          : \"\")\r\n                      }\r\n                    />\r\n                    <ErrorMessage\r\n                      name=\"password\"\r\n                      component=\"div\"\r\n                      className=\"invalid-feedback\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <button type=\"submit\" className=\"btn btn-primary btn-block\">\r\n                      Sign Up\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}