{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport AuthService from \"../services/auth.service\";\nconst user = JSON.parse(localStorage.getItem(\"user\"));\nexport const register = createAsyncThunk(\"auth/register\", async (_ref, thunkAPI) => {\n  let {\n    username,\n    email,\n    password\n  } = _ref;\n  try {\n    const response = await AuthService.register(username, email, password);\n    return response.data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue();\n  }\n});\nconst initialState = user ? {\n  isLoggedIn: true,\n  user\n} : {\n  isLoggedIn: false,\n  user: null\n};\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    [register.fulfilled]: (state, action) => {\n      state.isLoggedIn = false;\n    },\n    [register.rejected]: (state, action) => {\n      state.isLoggedIn = false;\n    }\n  }\n});\nconst {\n  reducer\n} = authSlice;\nexport default reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","AuthService","user","JSON","parse","localStorage","getItem","register","_ref","thunkAPI","username","email","password","response","data","error","rejectWithValue","initialState","isLoggedIn","authSlice","name","reducers","fulfilled","state","action","rejected","reducer"],"sources":["D:/Wallet Application/wallet-application/src/slices/auth.slice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\nexport const register = createAsyncThunk(\r\n    \"auth/register\",\r\n    async ({ username, email, password }, thunkAPI) => {\r\n      try {\r\n        const response = await AuthService.register(username, email, password);\r\n        return response.data;\r\n      } catch (error) {\r\n        return thunkAPI.rejectWithValue();\r\n      }\r\n    }\r\n  );\r\n\r\n  const initialState = user\r\n  ? { isLoggedIn: true, user }\r\n  : { isLoggedIn: false, user: null };\r\n\r\n  const authSlice = createSlice({\r\n    name: \"auth\",\r\n    initialState,\r\n    reducers: {\r\n      [register.fulfilled]: (state, action) => {\r\n        state.isLoggedIn = false;\r\n      },\r\n      [register.rejected]: (state, action) => {\r\n        state.isLoggedIn = false;\r\n      }\r\n    },\r\n  });\r\n  \r\n  const { reducer } = authSlice;\r\n  export default reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,OAAOC,WAAW,MAAM,0BAA0B;AAElD,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;AAErD,OAAO,MAAMC,QAAQ,GAAGP,gBAAgB,CACpC,eAAe,EACf,OAAAQ,IAAA,EAAsCC,QAAQ,KAAK;EAAA,IAA5C;IAAEC,QAAQ;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAAJ,IAAA;EAClC,IAAI;IACF,MAAMK,QAAQ,GAAG,MAAMZ,WAAW,CAACM,QAAQ,CAACG,QAAQ,EAAEC,KAAK,EAAEC,QAAQ,CAAC;IACtE,OAAOC,QAAQ,CAACC,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAON,QAAQ,CAACO,eAAe,EAAE;EACnC;AACF,CAAC,CACF;AAED,MAAMC,YAAY,GAAGf,IAAI,GACvB;EAAEgB,UAAU,EAAE,IAAI;EAAEhB;AAAK,CAAC,GAC1B;EAAEgB,UAAU,EAAE,KAAK;EAAEhB,IAAI,EAAE;AAAK,CAAC;AAEnC,MAAMiB,SAAS,GAAGpB,WAAW,CAAC;EAC5BqB,IAAI,EAAE,MAAM;EACZH,YAAY;EACZI,QAAQ,EAAE;IACR,CAACd,QAAQ,CAACe,SAAS,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;MACvCD,KAAK,CAACL,UAAU,GAAG,KAAK;IAC1B,CAAC;IACD,CAACX,QAAQ,CAACkB,QAAQ,GAAG,CAACF,KAAK,EAAEC,MAAM,KAAK;MACtCD,KAAK,CAACL,UAAU,GAAG,KAAK;IAC1B;EACF;AACF,CAAC,CAAC;AAEF,MAAM;EAAEQ;AAAQ,CAAC,GAAGP,SAAS;AAC7B,eAAeO,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}