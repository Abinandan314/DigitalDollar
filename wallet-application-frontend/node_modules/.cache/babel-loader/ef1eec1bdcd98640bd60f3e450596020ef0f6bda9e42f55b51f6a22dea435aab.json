{"ast":null,"code":"var _jsxFileName = \"D:\\\\Wallet Application\\\\wallet-application\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { register } from \"../slices/auth.slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [successful, setSuccessful] = useState(false);\n  const dispatch = useDispatch();\n  const initialValues = {\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  };\n  const handleRegister = formValue => {\n    console.log(\"Hello Coming In\");\n    const {\n      username,\n      email,\n      password\n    } = formValue;\n    setSuccessful(false);\n    dispatch(register({\n      username,\n      email,\n      password\n    })).unwrap().then(() => {\n      setSuccessful(true);\n    }).catch(() => {\n      setSuccessful(false);\n    });\n  };\n  const onSubmitSumma = () => {\n    console.log(\"Comming IN\");\n  };\n  // const validationSchema = Yup.object().shape({\n  //   username: Yup.string()\n  //     .test(\n  //       \"len\",\n  //       \"The username must be between 3 and 20 characters.\",\n  //       (val) =>\n  //         val && val.toString().length >= 3 && val.toString().length <= 20\n  //     )\n  //     .required(\"This field is required!\"),\n  //   email: Yup.string()\n  //     .email(\"This is not a valid email.\")\n  //     .required(\"This field is required!\"),\n  //   password: Yup.string()\n  //     .test(\n  //       \"len\",\n  //       \"The password must be between 6 and 40 characters.\",\n  //       (val) =>\n  //         val && val.toString().length >= 6 && val.toString().length <= 40\n  //     )\n  //     .required(\"This field is required!\"),\n  // });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-md-12 signup-form\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card card-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\",\n        alt: \"profile-img\",\n        className: \"profile-img-card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmitSumma,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"DM7KNfq750I8FME2Dga3K/4+Uxo=\", false, function () {\n  return [useDispatch];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useDispatch","Formik","Field","Form","ErrorMessage","Yup","register","jsxDEV","_jsxDEV","Register","_s","successful","setSuccessful","dispatch","initialValues","username","email","password","handleRegister","formValue","console","log","unwrap","then","catch","onSubmitSumma","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","_c","$RefreshReg$"],"sources":["D:/Wallet Application/wallet-application/src/components/Register.js"],"sourcesContent":["import React, { useState} from \"react\";\r\nimport { useDispatch} from \"react-redux\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport { register } from \"../slices/auth.slice\";\r\n\r\nconst Register = () => {\r\n  const [successful, setSuccessful] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const initialValues = {\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  \r\n\r\n  const handleRegister = (formValue) => {\r\n    console.log(\"Hello Coming In\");\r\n    const { username, email, password } = formValue;\r\n\r\n    setSuccessful(false);\r\n\r\n    dispatch(register({ username, email, password }))\r\n      .unwrap()\r\n      .then(() => {\r\n        setSuccessful(true);\r\n      })\r\n      .catch(() => {\r\n        setSuccessful(false);\r\n      });\r\n  };\r\n  const onSubmitSumma = () => {\r\n    console.log(\"Comming IN\");\r\n  }\r\n  // const validationSchema = Yup.object().shape({\r\n  //   username: Yup.string()\r\n  //     .test(\r\n  //       \"len\",\r\n  //       \"The username must be between 3 and 20 characters.\",\r\n  //       (val) =>\r\n  //         val && val.toString().length >= 3 && val.toString().length <= 20\r\n  //     )\r\n  //     .required(\"This field is required!\"),\r\n  //   email: Yup.string()\r\n  //     .email(\"This is not a valid email.\")\r\n  //     .required(\"This field is required!\"),\r\n  //   password: Yup.string()\r\n  //     .test(\r\n  //       \"len\",\r\n  //       \"The password must be between 6 and 40 characters.\",\r\n  //       (val) =>\r\n  //         val && val.toString().length >= 6 && val.toString().length <= 40\r\n  //     )\r\n  //     .required(\"This field is required!\"),\r\n  // });\r\n\r\n  return (\r\n    <div className=\"col-md-12 signup-form\">\r\n      <div className=\"card card-container\">\r\n        <img\r\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n          alt=\"profile-img\"\r\n          className=\"profile-img-card\"\r\n        />\r\n        <form onSubmit={onSubmitSumma}>\r\n            <label>Username</label>\r\n            <input type=\"text\"></input>\r\n            <label>Email</label>\r\n            <input type=\"email\"></input>\r\n            <label>Password</label>\r\n            <input type=\"password\"></input>\r\n            <input type=\"submit\"></input>\r\n        </form>\r\n         {/* <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={validationSchema}\r\n          onSubmit={handleRegister}\r\n          \r\n        >\r\n          {({ errors, touched }) => (\r\n            \r\n            <Form>\r\n              {!successful && (\r\n                <div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"username\">Username</label>\r\n                    <Field\r\n                      name=\"username\"\r\n                      type=\"text\"\r\n                      className={\r\n                        \"form-control\" +\r\n                        (errors.username && touched.username\r\n                          ? \" is-invalid\"\r\n                          : \"\")\r\n                      }\r\n                    />\r\n                    <ErrorMessage\r\n                      name=\"username\"\r\n                      component=\"div\"\r\n                      className=\"invalid-feedback\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <Field\r\n                      name=\"email\"\r\n                      type=\"email\"\r\n                      className={\r\n                        \"form-control\" +\r\n                        (errors.email && touched.email ? \" is-invalid\" : \"\")\r\n                      }\r\n                    />\r\n                    <ErrorMessage\r\n                      name=\"email\"\r\n                      component=\"div\"\r\n                      className=\"invalid-feedback\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <Field\r\n                      name=\"password\"\r\n                      type=\"password\"\r\n                      className={\r\n                        \"form-control\" +\r\n                        (errors.password && touched.password\r\n                          ? \" is-invalid\"\r\n                          : \"\")\r\n                      }\r\n                    />\r\n                    <ErrorMessage\r\n                      name=\"password\"\r\n                      component=\"div\"\r\n                      className=\"invalid-feedback\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <button type=\"submit\" className=\"btn btn-primary btn-block\">\r\n                      Sign Up\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </Form>\r\n          )}\r\n        </Formik> */}\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}